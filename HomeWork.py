#1 В России применяются регистрационные знаки нескольких видов. Общего в них то, что они состоят из цифр и букв. Причём используются только 12 букв кириллицы, имеющие графические аналоги в латинском алфавите — А, В, Е, К, М, Н, О, Р, С, Т, У и Х. У частных легковых автомобилях номера — это буква, три цифры, две буквы, затем две или три цифры с кодом региона. У такси — две буквы, три цифры, затем две или три цифры с кодом региона. Есть также и другие виды, но в этой задаче они не понадобятся. Вам потребуется определить, является ли последовательность букв корректным номером указанных двух типов, и если является, то каким. На вход даются строки, которые претендуют на то, чтобы быть номером. Определите тип номера. Буквы в номерах — заглавные русские. Маленькие и английские для простоты можно игнорировать.
import re

def check_license_plate(number):
    private_car_pattern = re.compile(r'^[АВЕКМНОРСТУХ]\d{3}[АВЕКМНОРСТУХ]{2}\d{2,3}$')
    taxi_pattern = re.compile(r'^[АВЕКМНОРСТУХ]{2}\d{3}\d{2,3}$')

    if private_car_pattern.match(number):
        return 'Номер легкового автомобиля'
    elif taxi_pattern.match(number):
        return 'Номер автомобиля такси'
    else:
        return 'Это не номер автомобиля'

num = input('')
print(check_license_plate(num))
#2 Слово — это последовательность из букв (русских или английских), внутри которой могут быть дефисы. На вход даётся текст, посчитайте, сколько в нём слов. PS. Задача решается в одну строчку. Никакие хитрые техники, не упомянутые выше, не требуются. Прочитать текст из файла.

file = open("D:/2.txt", "rt")
data = file.read()
words = data.split()

print('Колличество слов в тексте', len(words))

#3 Вовочка подготовил одно очень важное письмо, но везде указал неправильное время. Поэтому нужно заменить все вхождения времени на строку (TBD). Время — это строка вида HH:MM:SS или HH:MM, в которой HH — число от 00 до 23, а MM и SS — число от 00 до 59. (ВВОД: Уважаемые! Если вы к 09:00 не вернёте чемодан, то уже в 09:00:01 я за себя не отвечаю. ВЫВОД: Уважаемые! Если вы к (TBD) не вернёте чемодан, то уже в (TBD) я за себя не отвечаю. )
import re

text = "Уважаемые! Если вы к 09:00 не вернёте чемодан, то уже в 09:00:01 я за себя не отвечаю."

pattern = re.compile(r'\b\d{2}:\d{2}(:\d{2})?\b')
result = pattern.sub('(TBD)', text)

print(result)
#4 Владимир устроился на работу в одно очень важное место. И в первом же документе он ничего не понял, там были сплошные ФГУП НИЦ ГИДГЕО, ФГОУ ЧШУ АПК и т.п. Тогда он решил собрать все аббревиатуры, чтобы потом найти их расшифровки на http://sokr.ru/. Помогите ему. Будем считать аббревиатурой слова только лишь из заглавных букв (как минимум из двух). Если несколько таких слов разделены пробелами, то они считаются одной аббревиатурой.
import re

text = str(input(''))

abbreviations = re.findall(r'\b[A-ZА-Я]{2,}\b', text)
print(abbreviations)
